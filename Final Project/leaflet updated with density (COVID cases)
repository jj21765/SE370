getwd()
setwd("C:/Users/Lucas/Downloads")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggmap)
covid <- read.csv("us-states.csv")
geoloc <- read.csv("Geocodes_USA_with_Counties.csv")
zip <- read.csv("ZIP-COUNTY-FIPS_2010-03.csv")
fips <- read.csv("StatesFIPSCodes.csv")
stateloc <- read.csv("states_loc.csv")

cases <- covid %>%
  dplyr::filter(date == "2020-05-01")
  #group_by(state) %>%
  #summarise(sum(cases))
  #dplyr::select(fips,cases,deaths)

fip <- fips %>%
  mutate("fips"= STATE_FIPS)

statesloc <- stateloc %>%
  mutate("STUSAB"= Ã¯..state) 

geocode <- fip %>%
  left_join(cases, by = "fips") 

rona <- geocode %>%
  left_join(statesloc, by = "STUSAB") %>%
  drop_na()%>%
  dplyr::select(name, cases, longitude, latitude,STATE_FIPS, deaths)

#------------------------------------------------------------------------------------
#--- MAP BY CASES ------------------------------------------------------------------
library(leaflet)
library(tidyverse)
library(ggmap)
library(leaflet.extras)
library(rgdal)
library(sf)
library(raster)

height <- max(rona$latitude) - min(rona$latitude)
width <- max(rona$longitude) - min(rona$longitude)
usboundaries <- c(left = min(rona$longitude)-width *0.05,
                  right = max(rona$longitude)+width*0.05,
                  bottom = min(rona$latitude)-height*0.05,
                  top = max(rona$latitude) + height*0.05)
usmap <- get_stamenmap(bbox = usboundaries, zoom =6, maptype = 'toner-lite')
ggmap(usmap)

usprov <- raster::getData('GADM', country = "USA", level = 1)
raster::plot(usprov)

rona2 <- rona %>% 
  dplyr::select(longitude,latitude)

rona3 <- SpatialPointsDataFrame(coords=rona2,data=rona,proj4string = CRS(proj4string(usprov)))
rona <- SpatialPointsDataFrame(coords = rona2, data=rona, proj4string = CRS(proj4string(usprov)))
usprov@data <- mutate(usprov@data,poly_id = as.numeric(rownames(usprov@data)))
rona3@data <- mutate(rona3@data,data_id = as.numeric(rownames(rona3@data)))
rona@data <- mutate(rona@data, data_id = as.numeric(rownames(rona@data)))
rona4 <- over(rona3,usprov)
rona5 <- mutate(rona4, data_id = as.numeric(rownames(rona4)))
rona6 <- left_join(rona3@data,rona5, by = c("data_id" = "data_id"))

rona7 <- rona6 %>%
  group_by(poly_id, cases, deaths) %>%
  summarise(count = n()) %>%
  arrange(count) 

usprov@data <-  left_join(usprov@data,rona7)
bins <- c(0, 10, 50, 100, 150, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = usprov$cases, bins = bins)


labels <- sprintf("<stong>%s</strong><br/>%g Cases</strong><br/>%g Deaths",usprov$NAME_1, usprov$cases, usprov$deaths) %>%
  lapply(htmltools::HTML)
leaflet() %>%
  setView(lng = -80.34, lat = 30.63, zoom = 6) %>%
  #Using THREE different tiles here -- NatGeoWorld, Toner, and TonerLite
  addProviderTiles("Esri.NatGeoWorldMap", group = "NatGeo") %>%
  addProviderTiles(providers$Stamen.Toner, group = "Toner") %>%
  addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
  #Adding polygons
  addPolygons(data = usprov,
              fillColor = ~pal(count),
              weight = 2,
              opacity = 1,
              color = "white",
              dashArray = "3",
              fillOpacity = 0.7, 
              highlight = highlightOptions(
                weight = 5, 
                color = "#666",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE),
              label = labels,
              labelOptions = labelOptions(
                style = list("font-weight" = "normal", padding = "3px 8px"),
                textsize = "15px",
                direction = "auto")
  ) %>% 
  # Layers control, so the user can choose a tile
  addLayersControl(
    baseGroups = c("NatGeo", "Toner", "Toner Lite"),
    options = layersControlOptions(collapsed = FALSE)
  )

#-------------------------------------------------------------------------------
#------ sTARBUCKS LOCATIONS ---------------------------------------------------
getwd()
starbuckss <- read_csv("starbucks1.csv")
starbucks <- starbuckss %>%
  drop_na()

height <- max(starbucks$Latitude) - min(starbucks$Latitude)
width <- max(starbucks$Longitude) - min(starbucks$Longitude)
boundaries <- c(left = min(starbucks$Longitude) - width * .15,
                right = max(starbucks$Longitude) + width * .15, 
                bottom = min(starbucks$Latitude) - height * .15,
                top = max(starbucks$Latitude) + height * .15)
usmap <- get_stamenmap(bbox = usboundaries, zoom =6, maptype = 'toner-lite')
ggmap(usmap)

leaflet() %>%
  setView(lng = -73.95, lat = 41.39, zoom =10) %>%
  addProviderTiles("Esri.WorldTopoMap") %>% 
  addCircleMarkers(data = starbucks,
                   lng = ~ Longitude,
                   lat = ~ Latitude,
                   radius = 2)

#-----------------------------------------------------------------------------
labels <- sprintf("<stong>%s</strong><br/>%g Cases</strong><br/>%g Deaths",usprov$NAME_1, usprov$cases, usprov$deaths) %>%
  lapply(htmltools::HTML)
leaflet() %>%
  setView(lng = -80.34, lat = 30.63, zoom = 6) %>%
  #Using THREE different tiles here -- NatGeoWorld, Toner, and TonerLite
  addProviderTiles("Esri.NatGeoWorldMap", group = "NatGeo") %>%
  addProviderTiles(providers$Stamen.Toner, group = "Toner") %>%
  addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
  addCircleMarkers(data = starbucks,
                   lng = ~ Longitude,
                   lat = ~ Latitude,
                   radius = 2, color = "red") %>%
  #Adding polygons
  addPolygons(data = usprov,
              fillColor = ~pal(count),
              weight = 2,
              opacity = 1,
              color = "white",
              dashArray = "3",
              fillOpacity = 0.7, 
              highlight = highlightOptions(
                weight = 5, 
                color = "#666",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE),
              label = labels,
              labelOptions = labelOptions(
                style = list("font-weight" = "normal", padding = "3px 8px"),
                textsize = "15px",
                direction = "auto")
  ) %>% 
  # Layers control, so the user can choose a tile
  addLayersControl(
    baseGroups = c("NatGeo", "Toner", "Toner Lite"),
    options = layersControlOptions(collapsed = FALSE)
  )

#-----------------------------------------------------------------------
leaflet() %>%
  setView(lng = -80.34, lat = 30.63, zoom = 6) %>%
  #Using THREE different tiles here -- NatGeoWorld, Toner, and TonerLite
  addProviderTiles("Esri.NatGeoWorldMap", group = "NatGeo") %>%
  addCircleMarkers(data = starbucks,
                   lng = ~ Longitude,
                   lat = ~ Latitude,
                   radius = 2,
                   popup = paste("Location: ", 
                                starbucks$city)) 

#-------------------------------------------------------------------------

bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = usprov$deaths, bins = bins)

labels <- sprintf("<stong>%s</strong><br/>%g Cases</strong><br/>%g Deaths",usprov$NAME_1, usprov$cases, usprov$deaths) %>%
  lapply(htmltools::HTML)
leaflet() %>%
  setView(lng = -80.34, lat = 30.63, zoom = 6) %>%
  addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
  #Adding polygons
  addPolygons(data = usprov,
              fillColor = ~pal(deaths),
              weight = 2,
              opacity = 1,
              color = "white",
              dashArray = "3",
              fillOpacity = 0.7, 
              highlight = highlightOptions(
                weight = 5, 
                color = "#666",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE),
              label = labels,
              labelOptions = labelOptions(
                style = list("font-weight" = "normal", padding = "3px 8px"),
                textsize = "15px",
                direction = "auto")
  ) %>%
addLegend("bottomright",
          pal = pal,
          values = usprov$deaths,
          title = "Deaths due to Corona",
          opacity = 1) %>%
  addCircleMarkers(data = starbucks,
                   lng = ~ Longitude,
                   lat = ~ Latitude,
                   radius = 2, color = "black",
                   popup = paste("Location: ", 
                                 starbucks$city))



